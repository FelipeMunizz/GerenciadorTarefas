// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Data;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230604145920_InicialNot")]
    partial class InicialNot
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Models.Anexos", b =>
                {
                    b.Property<int>("AnexosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnexosId"));

                    b.Property<string>("Dados")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeAnexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TarefasId")
                        .HasColumnType("int");

                    b.HasKey("AnexosId");

                    b.HasIndex("TarefasId");

                    b.ToTable("Anexos");
                });

            modelBuilder.Entity("WebApi.Models.Projetos", b =>
                {
                    b.Property<int>("ProjetosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjetosId"));

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeProjeto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjetosId");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("WebApi.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("NomeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("WebApi.Models.Tarefas", b =>
                {
                    b.Property<int>("TarefasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TarefasId"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdProjeto")
                        .HasColumnType("int");

                    b.Property<int>("ProjetosId")
                        .HasColumnType("int");

                    b.Property<string>("StatusTarefa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TarefasId");

                    b.HasIndex("ProjetosId");

                    b.ToTable("Tarefas");
                });

            modelBuilder.Entity("WebApi.Models.TarefasStatus", b =>
                {
                    b.Property<int>("TarefasStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TarefasStatusId"));

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("TarefasId")
                        .HasColumnType("int");

                    b.HasKey("TarefasStatusId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TarefasId");

                    b.ToTable("TarefasStatus");
                });

            modelBuilder.Entity("WebApi.Models.Usuarios", b =>
                {
                    b.Property<int>("UsuariosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuariosId"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuariosId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("WebApi.Models.UsuariosProjeto", b =>
                {
                    b.Property<int>("UsuariosProjetoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuariosProjetoId"));

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<bool>("Responsavel")
                        .HasColumnType("bit");

                    b.Property<int>("UsuariosId")
                        .HasColumnType("int");

                    b.HasKey("UsuariosProjetoId");

                    b.HasIndex("ProjetoId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("UsuariosProjetos");
                });

            modelBuilder.Entity("WebApi.Models.Anexos", b =>
                {
                    b.HasOne("WebApi.Models.Tarefas", "Tarefas")
                        .WithMany("Anexos")
                        .HasForeignKey("TarefasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("WebApi.Models.Tarefas", b =>
                {
                    b.HasOne("WebApi.Models.Projetos", "PROJETO")
                        .WithMany()
                        .HasForeignKey("ProjetosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PROJETO");
                });

            modelBuilder.Entity("WebApi.Models.TarefasStatus", b =>
                {
                    b.HasOne("WebApi.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Models.Tarefas", "Tarefas")
                        .WithMany()
                        .HasForeignKey("TarefasId");

                    b.Navigation("Status");

                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("WebApi.Models.UsuariosProjeto", b =>
                {
                    b.HasOne("WebApi.Models.Projetos", "Projeto")
                        .WithMany("UsuariosProjetos")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Models.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebApi.Models.Projetos", b =>
                {
                    b.Navigation("UsuariosProjetos");
                });

            modelBuilder.Entity("WebApi.Models.Tarefas", b =>
                {
                    b.Navigation("Anexos");
                });
#pragma warning restore 612, 618
        }
    }
}
